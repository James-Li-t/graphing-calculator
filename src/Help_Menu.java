
import java.awt.Color;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Administrator
 */
public class Help_Menu extends javax.swing.JFrame {

    /**
     * Creates new form Help
     */
    public Help_Menu() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jRadioButton1 = new javax.swing.JRadioButton();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        ChoiceA = new javax.swing.JRadioButton();
        ChoiceB = new javax.swing.JRadioButton();
        ChoiceC = new javax.swing.JRadioButton();
        ChoiceD = new javax.swing.JRadioButton();
        Linear_Submit = new javax.swing.JButton();
        Linear_Check = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        AnswerA = new javax.swing.JRadioButton();
        AnswerB = new javax.swing.JRadioButton();
        AnswerC = new javax.swing.JRadioButton();
        AnswerD = new javax.swing.JRadioButton();
        Quadratic_Submit = new javax.swing.JButton();
        Quadratic_Check = new javax.swing.JLabel();

        jRadioButton1.setText("jRadioButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jButton1.setText("Return to main menu");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Linear Functions");

        jTextArea1.setEditable(false);
        jTextArea1.setTabSize(0);
        jTextArea1.setText("Linear functions are functions represented by the equation: y = mx + b, where m represents the slope\nof the equation (slope is referring to the rise/run of the graph) and b is the value which indicates the\nvertical displacement from the parent function (y = x), a negative b value indicates a shift downwards \nwhilst a positive value indicates upwards.\n\n\n");
        jTextArea1.setWrapStyleWord(true);
        jTextArea1.setAutoscrolls(false);
        jScrollPane1.setViewportView(jTextArea1);

        jLabel2.setText("Which of the following is a linear function?");

        ChoiceA.setText("A. y = 2x^2 - 3");
        ChoiceA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChoiceAActionPerformed(evt);
            }
        });

        ChoiceB.setText("B.  y = 2x + 3");
        ChoiceB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChoiceBActionPerformed(evt);
            }
        });

        ChoiceC.setText("C. y = 1/x + 3");
        ChoiceC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChoiceCActionPerformed(evt);
            }
        });

        ChoiceD.setText("D. y = 1");
        ChoiceD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChoiceDActionPerformed(evt);
            }
        });

        Linear_Submit.setText("Submit");
        Linear_Submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Linear_SubmitActionPerformed(evt);
            }
        });

        jLabel3.setText("Quadratic Functions");

        jTextArea2.setEditable(false);
        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jTextArea2.setText("Quadratic functions are represented by either the equation y = ax^2 + bx + c (Standard Form), or \ny = a(x-h)^2 + k (Vertex Form). For the sake of simplicity you will need to know beforehand how to factor\nstandard form into vertex form in order to use this calculator. a is the value which represents the vertical\nstretch of the quadratic (a > 1 = stretch, a < 1; a > 0 = compression). h is the value of the horizontal \ndisplacement where if h is positive it is a horizontal shift to the left and if negative is a horizontal shift to\nthe right h also represents the x value of the vertex. k represents the vertical shift, where if k is positive, \nthere is a vertical shift upwards and downwards if negative, k also represents the y value of the vertex.");
        jScrollPane2.setViewportView(jTextArea2);

        jLabel4.setText("Which of the following indicates a horizontal shift of 2 units to the right?");

        AnswerA.setText("A. y = x^2");
        AnswerA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AnswerAActionPerformed(evt);
            }
        });

        AnswerB.setText("B. y = x + 2");
        AnswerB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AnswerBActionPerformed(evt);
            }
        });

        AnswerC.setText("C. y = 4(x - 2)^2 - 4");
        AnswerC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AnswerCActionPerformed(evt);
            }
        });

        AnswerD.setText("D. y = m");
        AnswerD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AnswerDActionPerformed(evt);
            }
        });

        Quadratic_Submit.setText("Submit");
        Quadratic_Submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Quadratic_SubmitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(325, 325, 325)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(107, 107, 107)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(157, 157, 157)
                                        .addComponent(ChoiceB)
                                        .addGap(57, 57, 57)
                                        .addComponent(ChoiceC))
                                    .addComponent(ChoiceA)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(39, 39, 39)
                                .addComponent(ChoiceD)
                                .addGap(40, 40, 40)
                                .addComponent(Linear_Submit))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(AnswerA)
                                .addGap(75, 75, 75)
                                .addComponent(AnswerB)
                                .addGap(40, 40, 40)
                                .addComponent(AnswerC)
                                .addGap(39, 39, 39)
                                .addComponent(AnswerD)
                                .addGap(35, 35, 35)
                                .addComponent(Quadratic_Submit))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 625, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 615, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(361, 361, 361)
                        .addComponent(Linear_Check))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(327, 327, 327)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(187, 187, 187)
                        .addComponent(jLabel4))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(335, 335, 335)
                        .addComponent(Quadratic_Check)))
                .addContainerGap(45, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addGap(40, 40, 40)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ChoiceA)
                    .addComponent(ChoiceB)
                    .addComponent(ChoiceC)
                    .addComponent(ChoiceD)
                    .addComponent(Linear_Submit))
                .addGap(18, 18, 18)
                .addComponent(Linear_Check)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AnswerA)
                    .addComponent(AnswerB)
                    .addComponent(AnswerC)
                    .addComponent(AnswerD)
                    .addComponent(Quadratic_Submit))
                .addGap(18, 18, 18)
                .addComponent(Quadratic_Check)
                .addContainerGap(64, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        // Returns user to main menu
        setVisible(false);
        Main_Menu Main = new Main_Menu();
        Main.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void ChoiceAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChoiceAActionPerformed
        //Creates a boolean variable equal to the status of the
        //radio button for choice A
        boolean Selection = ChoiceA.isSelected();
        //If the button is selected (true) then disables the other buttons
        //this is used to prevent the user from submitting multiple answers
        if (Selection = true) {
            ChoiceB.setEnabled(false);
            ChoiceC.setEnabled(false);
            ChoiceD.setEnabled(false);
        }
    }//GEN-LAST:event_ChoiceAActionPerformed

    private void Linear_SubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Linear_SubmitActionPerformed

        //  Checking for if the selection is correct
        if (ChoiceB.isSelected() == true) {
            Linear_Check.setForeground(Color.green);
            Linear_Check.setText("Correct!");
            //Disables the buttons due to the user having selected the
            //correct answer
            ChoiceA.setEnabled(false);
            ChoiceB.setEnabled(false);
            ChoiceC.setEnabled(false);
            ChoiceD.setEnabled(false);

        } else if (ChoiceA.isSelected() == true) {
            Linear_Check.setForeground(Color.red);
            Linear_Check.setText("Incorrect!");
            //Resets the buttons to their default state
            ChoiceA.setSelected(false);
            ChoiceB.setSelected(false);
            ChoiceC.setSelected(false);
            ChoiceD.setSelected(false);
            //Enables the buttons so that the user can choose another answer
            ChoiceB.setEnabled(true);
            ChoiceC.setEnabled(true);
            ChoiceD.setEnabled(true);

        } else if (ChoiceC.isSelected() == true) {
            Linear_Check.setForeground(Color.red);
            Linear_Check.setText("Incorrect!");
            //Resets the buttons to their default state
            ChoiceA.setSelected(false);
            ChoiceB.setSelected(false);
            ChoiceC.setSelected(false);
            ChoiceD.setSelected(false);
            //Enables the buttons so that the user can choose another answer
            ChoiceA.setEnabled(true);
            ChoiceB.setEnabled(true);
            ChoiceC.setEnabled(true);
            ChoiceD.setEnabled(true);

        } else if (ChoiceD.isSelected() == true) {
            Linear_Check.setForeground(Color.red);
            Linear_Check.setText("Incorrect!");
            //Resets the buttons to their default state
            ChoiceA.setSelected(false);
            ChoiceB.setSelected(false);
            ChoiceC.setSelected(false);
            ChoiceD.setSelected(false);
            //Enables the buttons so that the user can choose another answer
            ChoiceA.setEnabled(true);
            ChoiceB.setEnabled(true);
            ChoiceC.setEnabled(true);
            ChoiceD.setEnabled(true);
        }
    }//GEN-LAST:event_Linear_SubmitActionPerformed

    private void AnswerCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AnswerCActionPerformed
        //Creates a boolean variable equal to the status of the
        //radio button for choice C
        boolean Selection = AnswerC.isSelected();
        //If the button is selected (true) then disables the other buttons
        //this is used to prevent the user from submitting multiple answers        
        if (Selection = true) {
            AnswerB.setEnabled(false);
            AnswerA.setEnabled(false);
            AnswerD.setEnabled(false);
        }
    }//GEN-LAST:event_AnswerCActionPerformed

    private void AnswerDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AnswerDActionPerformed
        //Creates a boolean variable equal to the status of the
        //radio button for choice D
        boolean Selection = AnswerD.isSelected();
        //If the button is selected (true) then disables the other buttons
        //this is used to prevent the user from submitting multiple answers
        if (Selection = true) {
            AnswerB.setEnabled(false);
            AnswerC.setEnabled(false);
            AnswerA.setEnabled(false);
        }
    }//GEN-LAST:event_AnswerDActionPerformed

    private void Quadratic_SubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Quadratic_SubmitActionPerformed

        //  Checking for if the selection is correct
        if (AnswerC.isSelected() == true) {
            Quadratic_Check.setForeground(Color.green);
            Quadratic_Check.setText("Correct!");
            //Disables the buttons due to the user having selected the
            //correct answer
            AnswerA.setEnabled(false);
            AnswerB.setEnabled(false);
            AnswerC.setEnabled(false);
            AnswerD.setEnabled(false);

        } else if (AnswerA.isSelected() == true) {
            Quadratic_Check.setForeground(Color.red);
            Quadratic_Check.setText("Incorrect!");
            //Resets the buttons to their default state
            AnswerA.setSelected(false);
            AnswerB.setSelected(false);
            AnswerC.setSelected(false);
            AnswerD.setSelected(false);
            //Enables the buttons so that the user can choose another answer
            AnswerB.setEnabled(true);
            AnswerC.setEnabled(true);
            AnswerD.setEnabled(true);

        } else if (AnswerB.isSelected() == true) {
            Quadratic_Check.setForeground(Color.red);
            Quadratic_Check.setText("Incorrect!");
            //Resets the buttons to their default state
            AnswerA.setSelected(false);
            AnswerB.setSelected(false);
            AnswerC.setSelected(false);
            AnswerD.setSelected(false);
            //Enables the buttons so that the user can choose another answer
            AnswerA.setEnabled(true);
            AnswerC.setEnabled(true);
            AnswerD.setEnabled(true);

        } else if (AnswerD.isSelected() == true) {
            Quadratic_Check.setForeground(Color.red);
            Quadratic_Check.setText("Incorrect!");
            //Resets the buttons to their default state
            AnswerA.setSelected(false);
            AnswerB.setSelected(false);
            AnswerC.setSelected(false);
            AnswerD.setSelected(false);
            //Enables the buttons so that the user can choose another answer
            AnswerB.setEnabled(true);
            AnswerC.setEnabled(true);
            AnswerA.setEnabled(true);
        }

    }//GEN-LAST:event_Quadratic_SubmitActionPerformed

    private void ChoiceBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChoiceBActionPerformed
        //Creates a boolean variable equal to the status of the
        //radio button for choice B
        boolean Selection = ChoiceB.isSelected();
        //If the button is selected (true) then disables the other buttons
        //this is used to prevent the user from submitting multiple answers
        if (Selection = true) {
            ChoiceA.setEnabled(false);
            ChoiceC.setEnabled(false);
            ChoiceD.setEnabled(false);
    }//GEN-LAST:event_ChoiceBActionPerformed
    }
    private void ChoiceCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChoiceCActionPerformed
        //Creates a boolean variable equal to the status of the
        //radio button for choice C
        boolean Selection = ChoiceC.isSelected();
        //If the button is selected (true) then disables the other buttons
        //this is used to prevent the user from submitting multiple answers
        if (Selection = true) {
            ChoiceB.setEnabled(false);
            ChoiceA.setEnabled(false);
            ChoiceD.setEnabled(false);
    }//GEN-LAST:event_ChoiceCActionPerformed
    }
    private void ChoiceDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChoiceDActionPerformed
        //Creates a boolean variable equal to the status of the
        //radio button for choice D
        boolean Selection = ChoiceD.isSelected();
        //If the button is selected (true) then disables the other buttons
        //this is used to prevent the user from submitting multiple answers
        if (Selection = true) {
            ChoiceB.setEnabled(false);
            ChoiceC.setEnabled(false);
            ChoiceA.setEnabled(false);
    }//GEN-LAST:event_ChoiceDActionPerformed
    }

    private void AnswerAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AnswerAActionPerformed
        //Creates a boolean variable equal to the status of the
        //radio button for choice A
        boolean Selection = AnswerA.isSelected();
        //If the button is selected (true) then disables the other buttons
        //this is used to prevent the user from submitting multiple answers
        if (Selection = true) {
            AnswerB.setEnabled(false);
            AnswerC.setEnabled(false);
            AnswerD.setEnabled(false);
        }
    }//GEN-LAST:event_AnswerAActionPerformed

    private void AnswerBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AnswerBActionPerformed
        //Creates a boolean variable equal to the status of the
        //radio button for choice B
        boolean Selection = AnswerB.isSelected();
        //If the button is selected (true) then disables the other buttons
        //this is used to prevent the user from submitting multiple answers
        if (Selection = true) {
            AnswerA.setEnabled(false);
            AnswerC.setEnabled(false);
            AnswerD.setEnabled(false);
        }
    }//GEN-LAST:event_AnswerBActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Help_Menu.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Help_Menu.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Help_Menu.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Help_Menu.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Help_Menu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton AnswerA;
    private javax.swing.JRadioButton AnswerB;
    private javax.swing.JRadioButton AnswerC;
    private javax.swing.JRadioButton AnswerD;
    private javax.swing.JRadioButton ChoiceA;
    private javax.swing.JRadioButton ChoiceB;
    private javax.swing.JRadioButton ChoiceC;
    private javax.swing.JRadioButton ChoiceD;
    private javax.swing.JLabel Linear_Check;
    private javax.swing.JButton Linear_Submit;
    private javax.swing.JLabel Quadratic_Check;
    private javax.swing.JButton Quadratic_Submit;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    // End of variables declaration//GEN-END:variables
}
